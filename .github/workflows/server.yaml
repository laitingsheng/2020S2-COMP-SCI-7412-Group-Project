name: server

on:
  push:
    branches:
      - master
      - dev/backend
    paths:
      - '.github/workflows/server.yaml'
      - 'backend/src/**'
      - 'backend/build.gradle'
      - 'backend/settings.gradle'
  pull_request:
    branches:
      - master
      - dev/backend
    paths:
      - '.github/workflows/server.yaml'
      - 'backend/src/**'
      - 'backend/build.gradle'
      - 'backend/settings.gradle'

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache .gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ github.ref }}-gradle-${{ hashFiles('backend/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.ref }}-gradle-
      - name: Output secrete as file
        run: echo "${FIREBASE_SA_KEY}" > src/main/resources/firebase-admin.json
        working-directory: backend
        env:
          FIREBASE_SA_KEY: ${{ secrets.FIREBASE_SA_KEY }}
      - name: Build & Run unit testing and JaCoCo coverage report
        run: gradle -p backend build test jacocoTestReport
      - name: Upload JaCoCo coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: backend/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend
      - name: Initialise Google Cloud SDK
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure Docker credential with Google Cloud SDK
        run: gcloud auth configure-docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
